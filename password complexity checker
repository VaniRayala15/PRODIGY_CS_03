import re

def assess_password_strength(password):
    # Initialize criteria flags
    length_criteria = len(password) >= 8
    uppercase_criteria = re.search(r'[A-Z]', password) is not None
    lowercase_criteria = re.search(r'[a-z]', password) is not None
    number_criteria = re.search(r'[0-9]', password) is not None
    special_char_criteria = re.search(r'[\W_]', password) is not None

    # Count how many criteria are met
    criteria_met = sum([length_criteria, uppercase_criteria, lowercase_criteria, number_criteria, special_char_criteria])

    # Determine strength based on criteria met
    if criteria_met == 5:
        strength = "Very Strong"
    elif criteria_met == 4:
        strength = "Strong"
    elif criteria_met == 3:
        strength = "Moderate"
    elif criteria_met == 2:
        strength = "Weak"
    else:
        strength = "Very Weak"

    # Generate feedback
    feedback = {
        'Length Criteria (>=8 characters)': length_criteria,
        'Uppercase Letter': uppercase_criteria,
        'Lowercase Letter': lowercase_criteria,
        'Number': number_criteria,
        'Special Character': special_char_criteria,
    }

    return strength, feedback

# Example usage
password = input("Enter a password to assess its strength: ")
strength, feedback = assess_password_strength(password)

print("\nPassword Strength: ", strength)
print("\nCriteria Feedback:")
for criterion, met in feedback.items():
    print(f"{criterion}: {'Met' if met else 'Not Met'}")
